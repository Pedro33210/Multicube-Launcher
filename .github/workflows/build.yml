# module du helios launcher
name: Launcher Build
on:
  push:
    branches: [ master ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: release ${{ env.version }}
          draft: false
          prerelease: ${{ contains(env.version, 'beta') || contains(env.version, 'alpha') }}

  build-launcher:
    needs: create-release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-14, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: npm run build
        shell: bash

      - name: Encode certificate
        run: echo "${{ secrets.CODE_SIGNING_CERT_BASE64 }}" | base64 -d > code_signing_certificate.pfx
        shell: bash

      - name: Install signtool
        if: matrix.os == 'windows-latest'
        run: |
          curl -LO https://aka.ms/vs/17/release/vs_buildtools.exe
          Start-Process vs_buildtools.exe -ArgumentList '--quiet', '--wait', '--add Microsoft.VisualStudio.Component.VC.14.29.x86.x64' -NoNewWindow -Wait

      - name: Sign executable
        if: matrix.os == 'windows-latest'
        run: |
          signtool sign /f code_signing_certificate.pfx /p ${{ secrets.CERTIFICATE_PASSWORD }} /tr http://timestamp.digicert.com /td sha256 /fd sha256 /v dist\*.exe

      - name: Package and Upload
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Logic to package and upload your build artifacts (e.g., ZIP files, installers)
