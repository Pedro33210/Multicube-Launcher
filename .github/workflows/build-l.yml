name: Build, Sign, and Release Editor

on:
  push:
    branches: [ master ]

jobs:
  build-editor:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Build
        run: npm run build
        shell: bash

  sign-editor:
    needs: build-editor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up OpenSSL
        run: |
          sudo apt-get update
          sudo apt-get install -y openssl

      - name: Generate key and certificate (for demonstration purposes; use a real key in production)
        run: |
          openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "/CN=multicube.fr"
          openssl x509 -in cert.pem -pubkey -noout -out pubkey.pem
        shell: bash

      - name: Sign JavaScript file
        run: |
          openssl dgst -sha256 -sign key.pem -out signature.bin your-editor-file.js
        shell: bash

      - name: Verify signature
        run: |
          openssl dgst -sha256 -verify pubkey.pem -signature signature.bin your-editor-file.js
        shell: bash

      - name: Upload signed file and signature
        uses: actions/upload-artifact@v2
        with:
          name: signed-editor
          path: |
            your-editor-file.js
            signature.bin

  create-release:
    needs: sign-editor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          draft: false
          prerelease: ${{ contains(env.version, 'beta') || contains(env.version, 'alpha') }}
