name: Launcher Build with Code Signing

on:
  push:
    branches: [ master ]

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Get version
        run: echo "version=$(jq -r .version package.json)" >> $GITHUB_ENV
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          draft: false
          prerelease: ${{ contains(env.version, 'beta') || contains(env.version, 'alpha') }}

  sign-code:
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up OpenSSL
        run: |
          sudo apt-get update
          sudo apt-get install -y openssl

      - name: Generate key and certificate (for demonstration purposes; use a real key in production)
        run: |
          openssl req -x509 -newkey rsa:4096 -keyout key.pem -out cert.pem -days 365 -nodes -subj "//CN=yourdomain.com"
          openssl x509 -in cert.pem -pubkey -noout -out pubkey.pem

      - name: Sign the code
        run: |
          openssl dgst -sha256 -sign key.pem -out code.sig build.js

      - name: Verify the signature
        run: |
          openssl dgst -sha256 -verify pubkey.pem -signature code.sig build.js

      - name: Upload signed code and signature
        uses: actions/upload-artifact@v2
        with:
          name: signed-code
          path: |
            build.js
            code.sig

  build-launcher:
    needs: sign-code
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-14, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v1

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.github_token }}
        run: npm run build
        shell: bash

      # Ajoutez ici les étapes pour télécharger le code signé si nécessaire

      # Conditions pour les étapes spécifiques à l'OS
      - name: Set up OpenSSL (Ubuntu and macOS)
        if: matrix.os != 'windows-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y openssl
        shell: bash

      # ... autres étapes ...
